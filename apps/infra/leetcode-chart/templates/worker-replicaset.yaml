apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: worker-rs
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox  # Minimal image to perform the wait task
          command: ['sh', '-c', 'until nc -z {{ .Values.rabbitmq.fullnameOverride }}.{{ .Values.rabbitmq.namespaceOverride }}.svc.cluster.local 5672; do echo waiting for rabbitmq; sleep 5; done;']
          # The `nc -z` command checks if RabbitMQ is accepting connections on port 5672. The container sleeps and retries until RabbitMQ is available.
      containers:
        - name: worker
          image: {{ .Values.worker.image }}  # Update with your image
          ports:
            - containerPort: {{ .Values.worker.port }}
          env:
            - name: RABBITMQ_URL
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Values.rabbitmq.fullnameOverride }}.{{ .Values.rabbitmq.namespaceOverride }}.svc.cluster.local:5672"
            - name: DATABASE_URL
              value: "mongodb+srv://{{ .Values.database.username }}:{{ .Values.database.password }}@cluster0.vfrom.mongodb.net/leetcode"
